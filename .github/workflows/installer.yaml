name: Installer
on: push
jobs:
  Win32_installer:
    runs-on: ubuntu-20.04
    outputs:
      THID: ${{ steps.build.outputs.THID_out }}
      git_branch: ${{ steps.build.outputs.git_branch }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: install dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 86B72ED9
          sudo add-apt-repository 'deb [arch=amd64] https://mirror.mxe.cc/repos/apt focal main'
          sudo apt -qq update
          sudo apt install -y wine32
          sudo apt install -y ninja-build
          sudo apt install -y mxe-i686-w64-mingw32.static-binutils mxe-i686-w64-mingw32.static-bzip2 mxe-i686-w64-mingw32.static-expat mxe-i686-w64-mingw32.static-freetype-bootstrap mxe-i686-w64-mingw32.static-gcc mxe-i686-w64-mingw32.static-gettext mxe-i686-w64-mingw32.static-glib mxe-i686-w64-mingw32.static-harfbuzz mxe-i686-w64-mingw32.static-jpeg mxe-i686-w64-mingw32.static-libiconv mxe-i686-w64-mingw32.static-libpng mxe-i686-w64-mingw32.static-tiff mxe-i686-w64-mingw32.static-vtk mxe-i686-w64-mingw32.static-wxwidgets mxe-i686-w64-mingw32.static-xz mxe-i686-w64-mingw32.static-zlib mxe-i686-w64-mingw32.static-proj
          sudo sed -i '/pattern="PDF"/d' /etc/ImageMagick-6/policy.xml  # turn off policy preventing PDF conversion
      - name: build and create the installation package
        id: build
        run: |
          export PATH=/usr/lib/mxe/usr/bin:$PATH
          mkdir -p $HOME/.wine/drive_c/windows
          echo -e "mpost-path /home/runner/work/therion/therion-batteries/bin/win32/mpost.exe\npdftex-path /home/runner/work/therion/therion-batteries/bin/win32/pdftex.exe\nidentify-path /home/runner/work/therion/therion-batteries/bin/identify.exe\nconvert-path /home/runner/work/therion/therion-batteries/bin/convert.exe\n" > $HOME/.wine/drive_c/windows/therion.ini
          wget -qO - https://github.com/therion/therion-batteries/archive/master.tar.gz | tar -xz && mv therion-batteries-master ../therion-batteries
          if ${{startsWith(github.ref, 'refs/tags/v')}}; then THID=${GITHUB_REF##*/}; else THID=$(git rev-parse --short HEAD); fi
          echo "::set-output name=THID_out::$THID"
          BRANCH_FULL=$(git branch -r --contains ${{ github.ref }})
          BRANCH=${BRANCH_FULL##*/}
          echo "::set-output name=git_branch::$BRANCH"
          mkdir ../therion.bin
          cd ../therion.bin
          i686-w64-mingw32.static-cmake -G Ninja \
              -DMXE_USE_CCACHE=OFF \
              -DCMAKE_CROSSCOMPILING_EMULATOR=wine \
              -DBUILD_SHARED_LIBS=OFF ../therion
          ninja
          ninja samples
          cd ../therion-batteries
          wine InnoSetup/ISCC.exe therion.iss
          cd ../therion.bin
          mv therion-setup.exe therion-setup-$THID.exe
          mv thbook/thbook.pdf thbook-$THID.pdf
      - uses: 'actions/upload-artifact@v2'
        with:
          name: therion-setup-${{ steps.build.outputs.THID_out }}
          path: |
            /home/runner/work/therion/therion.bin/therion-setup-${{ steps.build.outputs.THID_out }}.exe
            /home/runner/work/therion/therion.bin/thbook-${{ steps.build.outputs.THID_out }}.pdf
  Release:
    runs-on: ubuntu-20.04
    needs: Win32_installer
    if: startsWith(github.ref, 'refs/tags/v') && needs.Win32_installer.outputs.git_branch == 'master' && github.event_name == 'push'
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ needs.Win32_installer.outputs.THID }}
          draft: false
          prerelease: false
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: therion-setup-${{ needs.Win32_installer.outputs.THID }}
      - name: Upload installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: therion-setup-${{ needs.Win32_installer.outputs.THID }}.exe
          asset_name: therion-setup-${{ needs.Win32_installer.outputs.THID }}.exe
          asset_content_type: application/exe
      - name: Upload thbook
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: thbook-${{ needs.Win32_installer.outputs.THID }}.pdf
          asset_name: thbook-${{ needs.Win32_installer.outputs.THID }}.pdf
          asset_content_type: application/pdf
